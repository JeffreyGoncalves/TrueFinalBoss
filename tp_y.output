Terminaux inutilisés dans la grammaire

   CHAINECRACTERE


État 66 conflits: 1 décalage/réduction


Grammaire

    0 $accept: Prog $end

    1 Prog: classLOpt block

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block

    3 ListParamClause: ListParam
    4                | %empty

    5 ListParam: Param ',' ListParam
    6          | Param

    7 Param: Var Object ':' CLASSID Init

    8 Var: VAR
    9    | %empty

   10 Init: AFF ExprRelop
   11     | %empty

   12 extendsClause: EXTENDS CLASSID '(' ListArgClause ')'

   13 ListArgClause: ListArg
   14              | %empty

   15 ListArg: Arg ',' ListArg
   16        | Arg

   17 Arg: ExprRelop

   18 constructorClause: block
   19                  | %empty

   20 declObject: OBJECT ID IS block

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID ADD ExprRelop
   22           | Override DEF ID '(' ListParamClause ')' ClassClause IS block

   23 Override: OVERRIDE
   24         | %empty

   25 ClassClause: ':' CLASSID
   26            | %empty

   27 CallMethod: Object '.' ID '(' ListArgClause ')'
   28           | CSTE '.' ID '(' ListArgClause ')'

   29 classLOpt: ListDeclClass
   30          | %empty

   31 ListDeclClass: declClass ListDeclClass
   32              | declClass

   33 block: '{' ListInstClause '}'

   34 ListInstClause: ListInst
   35               | %empty

   36 ListInst: Inst ListInst
   37         | Inst

   38 Inst: ITE
   39     | declObject
   40     | declMethod
   41     | block
   42     | RETURN ';'
   43     | cible ';'
   44     | ExprRelop ';'

   45 ITE: IF ExprRelop THEN Inst ELSE Inst

   46 cible: Object AFF ExprRelop

   47 Way: ID
   48    | Object '.' ID

   49 Object: Way
   50       | CallMethod

   51 ExprRelop: Expr RELOP Expr
   52          | Expr

   53 Expr: Expr ADD Expr
   54     | Expr SUB Expr
   55     | Expr MUL Expr
   56     | Expr DIV Expr
   57     | '(' Expr ')'
   58     | Object
   59     | CSTE


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 2 12 21 22 27 28 57
')' (41) 2 12 21 22 27 28 57
',' (44) 5 15
'.' (46) 27 28 48
':' (58) 7 21 25
';' (59) 42 43 44
'{' (123) 33
'}' (125) 33
error (256)
IS (258) 2 20 22
OBJECT (259) 20
CLASS (260) 2
VAR (261) 8
EXTENDS (262) 12
DEF (263) 21 22
OVERRIDE (264) 23
IF (265) 45
THEN (266) 45
ELSE (267) 45
AFF (268) 10 46
RETURN (269) 42
CHAINECRACTERE (270)
ADD (271) 21 53
SUB (272) 54
MUL (273) 55
DIV (274) 56
ID (275) 20 21 22 27 28 47 48
CLASSID (276) 2 7 12 25
CSTE (277) 28 59
RELOP (278) 51


Non-terminaux, suivis des règles où ils apparaissent

$accept (32)
    à gauche: 0
Prog (33)
    à gauche: 1, à droite: 0
declClass (34)
    à gauche: 2, à droite: 31 32
ListParamClause (35)
    à gauche: 3 4, à droite: 2 21 22
ListParam (36)
    à gauche: 5 6, à droite: 3 5
Param (37)
    à gauche: 7, à droite: 5 6
Var (38)
    à gauche: 8 9, à droite: 7
Init (39)
    à gauche: 10 11, à droite: 7
extendsClause (40)
    à gauche: 12, à droite: 2
ListArgClause (41)
    à gauche: 13 14, à droite: 12 27 28
ListArg (42)
    à gauche: 15 16, à droite: 13 15
Arg (43)
    à gauche: 17, à droite: 15 16
constructorClause (44)
    à gauche: 18 19, à droite: 2
declObject (45)
    à gauche: 20, à droite: 39
declMethod (46)
    à gauche: 21 22, à droite: 40
Override (47)
    à gauche: 23 24, à droite: 21 22
ClassClause (48)
    à gauche: 25 26, à droite: 22
CallMethod (49)
    à gauche: 27 28, à droite: 50
classLOpt (50)
    à gauche: 29 30, à droite: 1
ListDeclClass (51)
    à gauche: 31 32, à droite: 29 31
block (52)
    à gauche: 33, à droite: 1 2 18 20 22 41
ListInstClause (53)
    à gauche: 34 35, à droite: 33
ListInst (54)
    à gauche: 36 37, à droite: 34 36
Inst (55)
    à gauche: 38 39 40 41 42 43 44, à droite: 36 37 45
ITE (56)
    à gauche: 45, à droite: 38
cible (57)
    à gauche: 46, à droite: 43
Way (58)
    à gauche: 47 48, à droite: 49
Object (59)
    à gauche: 49 50, à droite: 7 27 46 48 58
ExprRelop (60)
    à gauche: 51 52, à droite: 10 17 21 44 45 46
Expr (61)
    à gauche: 53 54 55 56 57 58 59, à droite: 51 52 53 54 55 56 57


État 0

    0 $accept: . Prog $end

    CLASS  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 30 (classLOpt)

    Prog           aller à l'état 2
    declClass      aller à l'état 3
    classLOpt      aller à l'état 4
    ListDeclClass  aller à l'état 5


État 1

    2 declClass: CLASS . CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block

    CLASSID  décalage et aller à l'état 6


État 2

    0 $accept: Prog . $end

    $end  décalage et aller à l'état 7


État 3

   31 ListDeclClass: declClass . ListDeclClass
   32              | declClass .

    CLASS  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 32 (ListDeclClass)

    declClass      aller à l'état 3
    ListDeclClass  aller à l'état 8


État 4

    1 Prog: classLOpt . block

    '{'  décalage et aller à l'état 9

    block  aller à l'état 10


État 5

   29 classLOpt: ListDeclClass .

    $défaut  réduction par utilisation de la règle 29 (classLOpt)


État 6

    2 declClass: CLASS CLASSID . '(' ListParamClause ')' extendsClause constructorClause IS block

    '('  décalage et aller à l'état 11


État 7

    0 $accept: Prog $end .

    $défaut  accepter


État 8

   31 ListDeclClass: declClass ListDeclClass .

    $défaut  réduction par utilisation de la règle 31 (ListDeclClass)


État 9

   33 block: '{' . ListInstClause '}'

    OBJECT    décalage et aller à l'état 12
    OVERRIDE  décalage et aller à l'état 13
    IF        décalage et aller à l'état 14
    RETURN    décalage et aller à l'état 15
    '('       décalage et aller à l'état 16
    '{'       décalage et aller à l'état 9
    ID        décalage et aller à l'état 17
    CSTE      décalage et aller à l'état 18

    '}'       réduction par utilisation de la règle 35 (ListInstClause)
    $défaut  réduction par utilisation de la règle 24 (Override)

    declObject      aller à l'état 19
    declMethod      aller à l'état 20
    Override        aller à l'état 21
    CallMethod      aller à l'état 22
    block           aller à l'état 23
    ListInstClause  aller à l'état 24
    ListInst        aller à l'état 25
    Inst            aller à l'état 26
    ITE             aller à l'état 27
    cible           aller à l'état 28
    Way             aller à l'état 29
    Object          aller à l'état 30
    ExprRelop       aller à l'état 31
    Expr            aller à l'état 32


État 10

    1 Prog: classLOpt block .

    $défaut  réduction par utilisation de la règle 1 (Prog)


État 11

    2 declClass: CLASS CLASSID '(' . ListParamClause ')' extendsClause constructorClause IS block

    VAR  décalage et aller à l'état 33

    ')'       réduction par utilisation de la règle 4 (ListParamClause)
    $défaut  réduction par utilisation de la règle 9 (Var)

    ListParamClause  aller à l'état 34
    ListParam        aller à l'état 35
    Param            aller à l'état 36
    Var              aller à l'état 37


État 12

   20 declObject: OBJECT . ID IS block

    ID  décalage et aller à l'état 38


État 13

   23 Override: OVERRIDE .

    $défaut  réduction par utilisation de la règle 23 (Override)


État 14

   45 ITE: IF . ExprRelop THEN Inst ELSE Inst

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    ExprRelop   aller à l'état 40
    Expr        aller à l'état 32


État 15

   42 Inst: RETURN . ';'

    ';'  décalage et aller à l'état 41


État 16

   57 Expr: '(' . Expr ')'

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    Expr        aller à l'état 42


État 17

   47 Way: ID .

    $défaut  réduction par utilisation de la règle 47 (Way)


État 18

   28 CallMethod: CSTE . '.' ID '(' ListArgClause ')'
   59 Expr: CSTE .

    '.'  décalage et aller à l'état 43

    $défaut  réduction par utilisation de la règle 59 (Expr)


État 19

   39 Inst: declObject .

    $défaut  réduction par utilisation de la règle 39 (Inst)


État 20

   40 Inst: declMethod .

    $défaut  réduction par utilisation de la règle 40 (Inst)


État 21

   21 declMethod: Override . DEF ID '(' ListParamClause ')' ':' ID ADD ExprRelop
   22           | Override . DEF ID '(' ListParamClause ')' ClassClause IS block

    DEF  décalage et aller à l'état 44


État 22

   50 Object: CallMethod .

    $défaut  réduction par utilisation de la règle 50 (Object)


État 23

   41 Inst: block .

    $défaut  réduction par utilisation de la règle 41 (Inst)


État 24

   33 block: '{' ListInstClause . '}'

    '}'  décalage et aller à l'état 45


État 25

   34 ListInstClause: ListInst .

    $défaut  réduction par utilisation de la règle 34 (ListInstClause)


État 26

   36 ListInst: Inst . ListInst
   37         | Inst .

    OBJECT    décalage et aller à l'état 12
    OVERRIDE  décalage et aller à l'état 13
    IF        décalage et aller à l'état 14
    RETURN    décalage et aller à l'état 15
    '('       décalage et aller à l'état 16
    '{'       décalage et aller à l'état 9
    ID        décalage et aller à l'état 17
    CSTE      décalage et aller à l'état 18

    '}'       réduction par utilisation de la règle 37 (ListInst)
    $défaut  réduction par utilisation de la règle 24 (Override)

    declObject  aller à l'état 19
    declMethod  aller à l'état 20
    Override    aller à l'état 21
    CallMethod  aller à l'état 22
    block       aller à l'état 23
    ListInst    aller à l'état 46
    Inst        aller à l'état 26
    ITE         aller à l'état 27
    cible       aller à l'état 28
    Way         aller à l'état 29
    Object      aller à l'état 30
    ExprRelop   aller à l'état 31
    Expr        aller à l'état 32


État 27

   38 Inst: ITE .

    $défaut  réduction par utilisation de la règle 38 (Inst)


État 28

   43 Inst: cible . ';'

    ';'  décalage et aller à l'état 47


État 29

   49 Object: Way .

    $défaut  réduction par utilisation de la règle 49 (Object)


État 30

   27 CallMethod: Object . '.' ID '(' ListArgClause ')'
   46 cible: Object . AFF ExprRelop
   48 Way: Object . '.' ID
   58 Expr: Object .

    AFF  décalage et aller à l'état 48
    '.'  décalage et aller à l'état 49

    $défaut  réduction par utilisation de la règle 58 (Expr)


État 31

   44 Inst: ExprRelop . ';'

    ';'  décalage et aller à l'état 50


État 32

   51 ExprRelop: Expr . RELOP Expr
   52          | Expr .
   53 Expr: Expr . ADD Expr
   54     | Expr . SUB Expr
   55     | Expr . MUL Expr
   56     | Expr . DIV Expr

    ADD    décalage et aller à l'état 51
    SUB    décalage et aller à l'état 52
    MUL    décalage et aller à l'état 53
    DIV    décalage et aller à l'état 54
    RELOP  décalage et aller à l'état 55

    $défaut  réduction par utilisation de la règle 52 (ExprRelop)


État 33

    8 Var: VAR .

    $défaut  réduction par utilisation de la règle 8 (Var)


État 34

    2 declClass: CLASS CLASSID '(' ListParamClause . ')' extendsClause constructorClause IS block

    ')'  décalage et aller à l'état 56


État 35

    3 ListParamClause: ListParam .

    $défaut  réduction par utilisation de la règle 3 (ListParamClause)


État 36

    5 ListParam: Param . ',' ListParam
    6          | Param .

    ','  décalage et aller à l'état 57

    $défaut  réduction par utilisation de la règle 6 (ListParam)


État 37

    7 Param: Var . Object ':' CLASSID Init

    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 58

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 59


État 38

   20 declObject: OBJECT ID . IS block

    IS  décalage et aller à l'état 60


État 39

   27 CallMethod: Object . '.' ID '(' ListArgClause ')'
   48 Way: Object . '.' ID
   58 Expr: Object .

    '.'  décalage et aller à l'état 49

    $défaut  réduction par utilisation de la règle 58 (Expr)


État 40

   45 ITE: IF ExprRelop . THEN Inst ELSE Inst

    THEN  décalage et aller à l'état 61


État 41

   42 Inst: RETURN ';' .

    $défaut  réduction par utilisation de la règle 42 (Inst)


État 42

   53 Expr: Expr . ADD Expr
   54     | Expr . SUB Expr
   55     | Expr . MUL Expr
   56     | Expr . DIV Expr
   57     | '(' Expr . ')'

    ')'  décalage et aller à l'état 62
    ADD  décalage et aller à l'état 51
    SUB  décalage et aller à l'état 52
    MUL  décalage et aller à l'état 53
    DIV  décalage et aller à l'état 54


État 43

   28 CallMethod: CSTE '.' . ID '(' ListArgClause ')'

    ID  décalage et aller à l'état 63


État 44

   21 declMethod: Override DEF . ID '(' ListParamClause ')' ':' ID ADD ExprRelop
   22           | Override DEF . ID '(' ListParamClause ')' ClassClause IS block

    ID  décalage et aller à l'état 64


État 45

   33 block: '{' ListInstClause '}' .

    $défaut  réduction par utilisation de la règle 33 (block)


État 46

   36 ListInst: Inst ListInst .

    $défaut  réduction par utilisation de la règle 36 (ListInst)


État 47

   43 Inst: cible ';' .

    $défaut  réduction par utilisation de la règle 43 (Inst)


État 48

   46 cible: Object AFF . ExprRelop

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    ExprRelop   aller à l'état 65
    Expr        aller à l'état 32


État 49

   27 CallMethod: Object '.' . ID '(' ListArgClause ')'
   48 Way: Object '.' . ID

    ID  décalage et aller à l'état 66


État 50

   44 Inst: ExprRelop ';' .

    $défaut  réduction par utilisation de la règle 44 (Inst)


État 51

   53 Expr: Expr ADD . Expr

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    Expr        aller à l'état 67


État 52

   54 Expr: Expr SUB . Expr

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    Expr        aller à l'état 68


État 53

   55 Expr: Expr MUL . Expr

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    Expr        aller à l'état 69


État 54

   56 Expr: Expr DIV . Expr

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    Expr        aller à l'état 70


État 55

   51 ExprRelop: Expr RELOP . Expr

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    Expr        aller à l'état 71


État 56

    2 declClass: CLASS CLASSID '(' ListParamClause ')' . extendsClause constructorClause IS block

    EXTENDS  décalage et aller à l'état 72

    extendsClause  aller à l'état 73


État 57

    5 ListParam: Param ',' . ListParam

    VAR  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 9 (Var)

    ListParam  aller à l'état 74
    Param      aller à l'état 36
    Var        aller à l'état 37


État 58

   28 CallMethod: CSTE . '.' ID '(' ListArgClause ')'

    '.'  décalage et aller à l'état 43


État 59

    7 Param: Var Object . ':' CLASSID Init
   27 CallMethod: Object . '.' ID '(' ListArgClause ')'
   48 Way: Object . '.' ID

    ':'  décalage et aller à l'état 75
    '.'  décalage et aller à l'état 49


État 60

   20 declObject: OBJECT ID IS . block

    '{'  décalage et aller à l'état 9

    block  aller à l'état 76


État 61

   45 ITE: IF ExprRelop THEN . Inst ELSE Inst

    OBJECT    décalage et aller à l'état 12
    OVERRIDE  décalage et aller à l'état 13
    IF        décalage et aller à l'état 14
    RETURN    décalage et aller à l'état 15
    '('       décalage et aller à l'état 16
    '{'       décalage et aller à l'état 9
    ID        décalage et aller à l'état 17
    CSTE      décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 24 (Override)

    declObject  aller à l'état 19
    declMethod  aller à l'état 20
    Override    aller à l'état 21
    CallMethod  aller à l'état 22
    block       aller à l'état 23
    Inst        aller à l'état 77
    ITE         aller à l'état 27
    cible       aller à l'état 28
    Way         aller à l'état 29
    Object      aller à l'état 30
    ExprRelop   aller à l'état 31
    Expr        aller à l'état 32


État 62

   57 Expr: '(' Expr ')' .

    $défaut  réduction par utilisation de la règle 57 (Expr)


État 63

   28 CallMethod: CSTE '.' ID . '(' ListArgClause ')'

    '('  décalage et aller à l'état 78


État 64

   21 declMethod: Override DEF ID . '(' ListParamClause ')' ':' ID ADD ExprRelop
   22           | Override DEF ID . '(' ListParamClause ')' ClassClause IS block

    '('  décalage et aller à l'état 79


État 65

   46 cible: Object AFF ExprRelop .

    $défaut  réduction par utilisation de la règle 46 (cible)


État 66

   27 CallMethod: Object '.' ID . '(' ListArgClause ')'
   48 Way: Object '.' ID .

    '('  décalage et aller à l'état 80

    '('       [réduction par utilisation de la règle 48 (Way)]
    $défaut  réduction par utilisation de la règle 48 (Way)


État 67

   53 Expr: Expr . ADD Expr
   53     | Expr ADD Expr .
   54     | Expr . SUB Expr
   55     | Expr . MUL Expr
   56     | Expr . DIV Expr

    MUL  décalage et aller à l'état 53
    DIV  décalage et aller à l'état 54

    $défaut  réduction par utilisation de la règle 53 (Expr)


État 68

   53 Expr: Expr . ADD Expr
   54     | Expr . SUB Expr
   54     | Expr SUB Expr .
   55     | Expr . MUL Expr
   56     | Expr . DIV Expr

    MUL  décalage et aller à l'état 53
    DIV  décalage et aller à l'état 54

    $défaut  réduction par utilisation de la règle 54 (Expr)


État 69

   53 Expr: Expr . ADD Expr
   54     | Expr . SUB Expr
   55     | Expr . MUL Expr
   55     | Expr MUL Expr .
   56     | Expr . DIV Expr

    $défaut  réduction par utilisation de la règle 55 (Expr)


État 70

   53 Expr: Expr . ADD Expr
   54     | Expr . SUB Expr
   55     | Expr . MUL Expr
   56     | Expr . DIV Expr
   56     | Expr DIV Expr .

    $défaut  réduction par utilisation de la règle 56 (Expr)


État 71

   51 ExprRelop: Expr RELOP Expr .
   53 Expr: Expr . ADD Expr
   54     | Expr . SUB Expr
   55     | Expr . MUL Expr
   56     | Expr . DIV Expr

    ADD  décalage et aller à l'état 51
    SUB  décalage et aller à l'état 52
    MUL  décalage et aller à l'état 53
    DIV  décalage et aller à l'état 54

    $défaut  réduction par utilisation de la règle 51 (ExprRelop)


État 72

   12 extendsClause: EXTENDS . CLASSID '(' ListArgClause ')'

    CLASSID  décalage et aller à l'état 81


État 73

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause . constructorClause IS block

    '{'  décalage et aller à l'état 9

    $défaut  réduction par utilisation de la règle 19 (constructorClause)

    constructorClause  aller à l'état 82
    block              aller à l'état 83


État 74

    5 ListParam: Param ',' ListParam .

    $défaut  réduction par utilisation de la règle 5 (ListParam)


État 75

    7 Param: Var Object ':' . CLASSID Init

    CLASSID  décalage et aller à l'état 84


État 76

   20 declObject: OBJECT ID IS block .

    $défaut  réduction par utilisation de la règle 20 (declObject)


État 77

   45 ITE: IF ExprRelop THEN Inst . ELSE Inst

    ELSE  décalage et aller à l'état 85


État 78

   28 CallMethod: CSTE '.' ID '(' . ListArgClause ')'

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 14 (ListArgClause)

    ListArgClause  aller à l'état 86
    ListArg        aller à l'état 87
    Arg            aller à l'état 88
    CallMethod     aller à l'état 22
    Way            aller à l'état 29
    Object         aller à l'état 39
    ExprRelop      aller à l'état 89
    Expr           aller à l'état 32


État 79

   21 declMethod: Override DEF ID '(' . ListParamClause ')' ':' ID ADD ExprRelop
   22           | Override DEF ID '(' . ListParamClause ')' ClassClause IS block

    VAR  décalage et aller à l'état 33

    ')'       réduction par utilisation de la règle 4 (ListParamClause)
    $défaut  réduction par utilisation de la règle 9 (Var)

    ListParamClause  aller à l'état 90
    ListParam        aller à l'état 35
    Param            aller à l'état 36
    Var              aller à l'état 37


État 80

   27 CallMethod: Object '.' ID '(' . ListArgClause ')'

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 14 (ListArgClause)

    ListArgClause  aller à l'état 91
    ListArg        aller à l'état 87
    Arg            aller à l'état 88
    CallMethod     aller à l'état 22
    Way            aller à l'état 29
    Object         aller à l'état 39
    ExprRelop      aller à l'état 89
    Expr           aller à l'état 32


État 81

   12 extendsClause: EXTENDS CLASSID . '(' ListArgClause ')'

    '('  décalage et aller à l'état 92


État 82

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause . IS block

    IS  décalage et aller à l'état 93


État 83

   18 constructorClause: block .

    $défaut  réduction par utilisation de la règle 18 (constructorClause)


État 84

    7 Param: Var Object ':' CLASSID . Init

    AFF  décalage et aller à l'état 94

    $défaut  réduction par utilisation de la règle 11 (Init)

    Init  aller à l'état 95


État 85

   45 ITE: IF ExprRelop THEN Inst ELSE . Inst

    OBJECT    décalage et aller à l'état 12
    OVERRIDE  décalage et aller à l'état 13
    IF        décalage et aller à l'état 14
    RETURN    décalage et aller à l'état 15
    '('       décalage et aller à l'état 16
    '{'       décalage et aller à l'état 9
    ID        décalage et aller à l'état 17
    CSTE      décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 24 (Override)

    declObject  aller à l'état 19
    declMethod  aller à l'état 20
    Override    aller à l'état 21
    CallMethod  aller à l'état 22
    block       aller à l'état 23
    Inst        aller à l'état 96
    ITE         aller à l'état 27
    cible       aller à l'état 28
    Way         aller à l'état 29
    Object      aller à l'état 30
    ExprRelop   aller à l'état 31
    Expr        aller à l'état 32


État 86

   28 CallMethod: CSTE '.' ID '(' ListArgClause . ')'

    ')'  décalage et aller à l'état 97


État 87

   13 ListArgClause: ListArg .

    $défaut  réduction par utilisation de la règle 13 (ListArgClause)


État 88

   15 ListArg: Arg . ',' ListArg
   16        | Arg .

    ','  décalage et aller à l'état 98

    $défaut  réduction par utilisation de la règle 16 (ListArg)


État 89

   17 Arg: ExprRelop .

    $défaut  réduction par utilisation de la règle 17 (Arg)


État 90

   21 declMethod: Override DEF ID '(' ListParamClause . ')' ':' ID ADD ExprRelop
   22           | Override DEF ID '(' ListParamClause . ')' ClassClause IS block

    ')'  décalage et aller à l'état 99


État 91

   27 CallMethod: Object '.' ID '(' ListArgClause . ')'

    ')'  décalage et aller à l'état 100


État 92

   12 extendsClause: EXTENDS CLASSID '(' . ListArgClause ')'

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 14 (ListArgClause)

    ListArgClause  aller à l'état 101
    ListArg        aller à l'état 87
    Arg            aller à l'état 88
    CallMethod     aller à l'état 22
    Way            aller à l'état 29
    Object         aller à l'état 39
    ExprRelop      aller à l'état 89
    Expr           aller à l'état 32


État 93

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS . block

    '{'  décalage et aller à l'état 9

    block  aller à l'état 102


État 94

   10 Init: AFF . ExprRelop

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    ExprRelop   aller à l'état 103
    Expr        aller à l'état 32


État 95

    7 Param: Var Object ':' CLASSID Init .

    $défaut  réduction par utilisation de la règle 7 (Param)


État 96

   45 ITE: IF ExprRelop THEN Inst ELSE Inst .

    $défaut  réduction par utilisation de la règle 45 (ITE)


État 97

   28 CallMethod: CSTE '.' ID '(' ListArgClause ')' .

    $défaut  réduction par utilisation de la règle 28 (CallMethod)


État 98

   15 ListArg: Arg ',' . ListArg

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    ListArg     aller à l'état 104
    Arg         aller à l'état 88
    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    ExprRelop   aller à l'état 89
    Expr        aller à l'état 32


État 99

   21 declMethod: Override DEF ID '(' ListParamClause ')' . ':' ID ADD ExprRelop
   22           | Override DEF ID '(' ListParamClause ')' . ClassClause IS block

    ':'  décalage et aller à l'état 105

    $défaut  réduction par utilisation de la règle 26 (ClassClause)

    ClassClause  aller à l'état 106


État 100

   27 CallMethod: Object '.' ID '(' ListArgClause ')' .

    $défaut  réduction par utilisation de la règle 27 (CallMethod)


État 101

   12 extendsClause: EXTENDS CLASSID '(' ListArgClause . ')'

    ')'  décalage et aller à l'état 107


État 102

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block .

    $défaut  réduction par utilisation de la règle 2 (declClass)


État 103

   10 Init: AFF ExprRelop .

    $défaut  réduction par utilisation de la règle 10 (Init)


État 104

   15 ListArg: Arg ',' ListArg .

    $défaut  réduction par utilisation de la règle 15 (ListArg)


État 105

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' . ID ADD ExprRelop
   25 ClassClause: ':' . CLASSID

    ID       décalage et aller à l'état 108
    CLASSID  décalage et aller à l'état 109


État 106

   22 declMethod: Override DEF ID '(' ListParamClause ')' ClassClause . IS block

    IS  décalage et aller à l'état 110


État 107

   12 extendsClause: EXTENDS CLASSID '(' ListArgClause ')' .

    $défaut  réduction par utilisation de la règle 12 (extendsClause)


État 108

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID . ADD ExprRelop

    ADD  décalage et aller à l'état 111


État 109

   25 ClassClause: ':' CLASSID .

    $défaut  réduction par utilisation de la règle 25 (ClassClause)


État 110

   22 declMethod: Override DEF ID '(' ListParamClause ')' ClassClause IS . block

    '{'  décalage et aller à l'état 9

    block  aller à l'état 112


État 111

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID ADD . ExprRelop

    '('   décalage et aller à l'état 16
    ID    décalage et aller à l'état 17
    CSTE  décalage et aller à l'état 18

    CallMethod  aller à l'état 22
    Way         aller à l'état 29
    Object      aller à l'état 39
    ExprRelop   aller à l'état 113
    Expr        aller à l'état 32


État 112

   22 declMethod: Override DEF ID '(' ListParamClause ')' ClassClause IS block .

    $défaut  réduction par utilisation de la règle 22 (declMethod)


État 113

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID ADD ExprRelop .

    $défaut  réduction par utilisation de la règle 21 (declMethod)
