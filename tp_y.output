Terminaux inutilisés dans la grammaire

   CHAINECRACTERE
   '.'
   RELOP


État 63 conflits: 1 décalage/réduction


Grammaire

    0 $accept: Prog $end

    1 Prog: classLOpt block

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block

    3 ListParamClause: ListParam
    4                | %empty

    5 ListParam: Param ',' ListParam
    6          | Param

    7 Param: Var ID ':' CLASSID Init

    8 Var: VAR
    9    | %empty

   10 Init: AFF Expr
   11     | %empty

   12 extendsClause: EXTENDS CLASSID '(' ListArgClause ')'

   13 ListArgClause: ListArg
   14              | %empty

   15 ListArg: Arg ',' ListArg
   16        | Arg

   17 Arg: Expr

   18 constructorClause: block
   19                  | %empty

   20 declObject: OBJECT ID IS block

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID ADD Expr
   22           | Override DEF ID '(' ListParamClause ')' ClassClause IS block

   23 Override: OVERRIDE
   24         | %empty

   25 ClassClause: ':' CLASSID
   26            | %empty

   27 classLOpt: ListDeclClass
   28          | %empty

   29 ListDeclClass: declClass ListDeclClass
   30              | declClass

   31 block: '{' ListInstClause '}'

   32 ListInstClause: ListInst
   33               | %empty

   34 ListInst: Inst ListInst
   35         | Inst

   36 Inst: ITE
   37     | declObject
   38     | declMethod
   39     | block
   40     | RETURN ';'
   41     | cible ';'
   42     | Expr ';'

   43 ITE: IF Expr THEN Inst else

   44 else: ELSE Inst
   45     | %empty

   46 cible: ID AFF Expr

   47 Expr: Expr ADD Expr
   48     | Expr SUB Expr
   49     | Expr MUL Expr
   50     | Expr DIV Expr
   51     | ID
   52     | CSTE


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 2 12 21 22
')' (41) 2 12 21 22
',' (44) 5 15
'.' (46)
':' (58) 7 21 25
';' (59) 40 41 42
'{' (123) 31
'}' (125) 31
error (256)
IS (258) 2 20 22
OBJECT (259) 20
CLASS (260) 2
VAR (261) 8
EXTENDS (262) 12
DEF (263) 21 22
OVERRIDE (264) 23
IF (265) 43
THEN (266) 43
ELSE (267) 44
AFF (268) 10 46
RETURN (269) 40
CHAINECRACTERE (270)
ADD (271) 21 47
SUB (272) 48
MUL (273) 49
DIV (274) 50
ID (275) 7 20 21 22 46 51
CLASSID (276) 2 7 12 25
CSTE (277) 52
RELOP (278)


Non-terminaux, suivis des règles où ils apparaissent

$accept (32)
    à gauche: 0
Prog (33)
    à gauche: 1, à droite: 0
declClass (34)
    à gauche: 2, à droite: 29 30
ListParamClause (35)
    à gauche: 3 4, à droite: 2 21 22
ListParam (36)
    à gauche: 5 6, à droite: 3 5
Param (37)
    à gauche: 7, à droite: 5 6
Var (38)
    à gauche: 8 9, à droite: 7
Init (39)
    à gauche: 10 11, à droite: 7
extendsClause (40)
    à gauche: 12, à droite: 2
ListArgClause (41)
    à gauche: 13 14, à droite: 12
ListArg (42)
    à gauche: 15 16, à droite: 13 15
Arg (43)
    à gauche: 17, à droite: 15 16
constructorClause (44)
    à gauche: 18 19, à droite: 2
declObject (45)
    à gauche: 20, à droite: 37
declMethod (46)
    à gauche: 21 22, à droite: 38
Override (47)
    à gauche: 23 24, à droite: 21 22
ClassClause (48)
    à gauche: 25 26, à droite: 22
classLOpt (49)
    à gauche: 27 28, à droite: 1
ListDeclClass (50)
    à gauche: 29 30, à droite: 27 29
block (51)
    à gauche: 31, à droite: 1 2 18 20 22 39
ListInstClause (52)
    à gauche: 32 33, à droite: 31
ListInst (53)
    à gauche: 34 35, à droite: 32 34
Inst (54)
    à gauche: 36 37 38 39 40 41 42, à droite: 34 35 43 44
ITE (55)
    à gauche: 43, à droite: 36
else (56)
    à gauche: 44 45, à droite: 43
cible (57)
    à gauche: 46, à droite: 41
Expr (58)
    à gauche: 47 48 49 50 51 52, à droite: 10 17 21 42 43 46 47 48
    49 50


État 0

    0 $accept: . Prog $end

    CLASS  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 28 (classLOpt)

    Prog           aller à l'état 2
    declClass      aller à l'état 3
    classLOpt      aller à l'état 4
    ListDeclClass  aller à l'état 5


État 1

    2 declClass: CLASS . CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block

    CLASSID  décalage et aller à l'état 6


État 2

    0 $accept: Prog . $end

    $end  décalage et aller à l'état 7


État 3

   29 ListDeclClass: declClass . ListDeclClass
   30              | declClass .

    CLASS  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 30 (ListDeclClass)

    declClass      aller à l'état 3
    ListDeclClass  aller à l'état 8


État 4

    1 Prog: classLOpt . block

    '{'  décalage et aller à l'état 9

    block  aller à l'état 10


État 5

   27 classLOpt: ListDeclClass .

    $défaut  réduction par utilisation de la règle 27 (classLOpt)


État 6

    2 declClass: CLASS CLASSID . '(' ListParamClause ')' extendsClause constructorClause IS block

    '('  décalage et aller à l'état 11


État 7

    0 $accept: Prog $end .

    $défaut  accepter


État 8

   29 ListDeclClass: declClass ListDeclClass .

    $défaut  réduction par utilisation de la règle 29 (ListDeclClass)


État 9

   31 block: '{' . ListInstClause '}'

    OBJECT    décalage et aller à l'état 12
    OVERRIDE  décalage et aller à l'état 13
    IF        décalage et aller à l'état 14
    RETURN    décalage et aller à l'état 15
    '{'       décalage et aller à l'état 9
    ID        décalage et aller à l'état 16
    CSTE      décalage et aller à l'état 17

    '}'       réduction par utilisation de la règle 33 (ListInstClause)
    $défaut  réduction par utilisation de la règle 24 (Override)

    declObject      aller à l'état 18
    declMethod      aller à l'état 19
    Override        aller à l'état 20
    block           aller à l'état 21
    ListInstClause  aller à l'état 22
    ListInst        aller à l'état 23
    Inst            aller à l'état 24
    ITE             aller à l'état 25
    cible           aller à l'état 26
    Expr            aller à l'état 27


État 10

    1 Prog: classLOpt block .

    $défaut  réduction par utilisation de la règle 1 (Prog)


État 11

    2 declClass: CLASS CLASSID '(' . ListParamClause ')' extendsClause constructorClause IS block

    VAR  décalage et aller à l'état 28

    ID        réduction par utilisation de la règle 9 (Var)
    $défaut  réduction par utilisation de la règle 4 (ListParamClause)

    ListParamClause  aller à l'état 29
    ListParam        aller à l'état 30
    Param            aller à l'état 31
    Var              aller à l'état 32


État 12

   20 declObject: OBJECT . ID IS block

    ID  décalage et aller à l'état 33


État 13

   23 Override: OVERRIDE .

    $défaut  réduction par utilisation de la règle 23 (Override)


État 14

   43 ITE: IF . Expr THEN Inst else

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    Expr  aller à l'état 35


État 15

   40 Inst: RETURN . ';'

    ';'  décalage et aller à l'état 36


État 16

   46 cible: ID . AFF Expr
   51 Expr: ID .

    AFF  décalage et aller à l'état 37

    $défaut  réduction par utilisation de la règle 51 (Expr)


État 17

   52 Expr: CSTE .

    $défaut  réduction par utilisation de la règle 52 (Expr)


État 18

   37 Inst: declObject .

    $défaut  réduction par utilisation de la règle 37 (Inst)


État 19

   38 Inst: declMethod .

    $défaut  réduction par utilisation de la règle 38 (Inst)


État 20

   21 declMethod: Override . DEF ID '(' ListParamClause ')' ':' ID ADD Expr
   22           | Override . DEF ID '(' ListParamClause ')' ClassClause IS block

    DEF  décalage et aller à l'état 38


État 21

   39 Inst: block .

    $défaut  réduction par utilisation de la règle 39 (Inst)


État 22

   31 block: '{' ListInstClause . '}'

    '}'  décalage et aller à l'état 39


État 23

   32 ListInstClause: ListInst .

    $défaut  réduction par utilisation de la règle 32 (ListInstClause)


État 24

   34 ListInst: Inst . ListInst
   35         | Inst .

    OBJECT    décalage et aller à l'état 12
    OVERRIDE  décalage et aller à l'état 13
    IF        décalage et aller à l'état 14
    RETURN    décalage et aller à l'état 15
    '{'       décalage et aller à l'état 9
    ID        décalage et aller à l'état 16
    CSTE      décalage et aller à l'état 17

    '}'       réduction par utilisation de la règle 35 (ListInst)
    $défaut  réduction par utilisation de la règle 24 (Override)

    declObject  aller à l'état 18
    declMethod  aller à l'état 19
    Override    aller à l'état 20
    block       aller à l'état 21
    ListInst    aller à l'état 40
    Inst        aller à l'état 24
    ITE         aller à l'état 25
    cible       aller à l'état 26
    Expr        aller à l'état 27


État 25

   36 Inst: ITE .

    $défaut  réduction par utilisation de la règle 36 (Inst)


État 26

   41 Inst: cible . ';'

    ';'  décalage et aller à l'état 41


État 27

   42 Inst: Expr . ';'
   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr

    ';'  décalage et aller à l'état 42
    ADD  décalage et aller à l'état 43
    SUB  décalage et aller à l'état 44
    MUL  décalage et aller à l'état 45
    DIV  décalage et aller à l'état 46


État 28

    8 Var: VAR .

    $défaut  réduction par utilisation de la règle 8 (Var)


État 29

    2 declClass: CLASS CLASSID '(' ListParamClause . ')' extendsClause constructorClause IS block

    ')'  décalage et aller à l'état 47


État 30

    3 ListParamClause: ListParam .

    $défaut  réduction par utilisation de la règle 3 (ListParamClause)


État 31

    5 ListParam: Param . ',' ListParam
    6          | Param .

    ','  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 6 (ListParam)


État 32

    7 Param: Var . ID ':' CLASSID Init

    ID  décalage et aller à l'état 49


État 33

   20 declObject: OBJECT ID . IS block

    IS  décalage et aller à l'état 50


État 34

   51 Expr: ID .

    $défaut  réduction par utilisation de la règle 51 (Expr)


État 35

   43 ITE: IF Expr . THEN Inst else
   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr

    THEN  décalage et aller à l'état 51
    ADD   décalage et aller à l'état 43
    SUB   décalage et aller à l'état 44
    MUL   décalage et aller à l'état 45
    DIV   décalage et aller à l'état 46


État 36

   40 Inst: RETURN ';' .

    $défaut  réduction par utilisation de la règle 40 (Inst)


État 37

   46 cible: ID AFF . Expr

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    Expr  aller à l'état 52


État 38

   21 declMethod: Override DEF . ID '(' ListParamClause ')' ':' ID ADD Expr
   22           | Override DEF . ID '(' ListParamClause ')' ClassClause IS block

    ID  décalage et aller à l'état 53


État 39

   31 block: '{' ListInstClause '}' .

    $défaut  réduction par utilisation de la règle 31 (block)


État 40

   34 ListInst: Inst ListInst .

    $défaut  réduction par utilisation de la règle 34 (ListInst)


État 41

   41 Inst: cible ';' .

    $défaut  réduction par utilisation de la règle 41 (Inst)


État 42

   42 Inst: Expr ';' .

    $défaut  réduction par utilisation de la règle 42 (Inst)


État 43

   47 Expr: Expr ADD . Expr

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    Expr  aller à l'état 54


État 44

   48 Expr: Expr SUB . Expr

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    Expr  aller à l'état 55


État 45

   49 Expr: Expr MUL . Expr

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    Expr  aller à l'état 56


État 46

   50 Expr: Expr DIV . Expr

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    Expr  aller à l'état 57


État 47

    2 declClass: CLASS CLASSID '(' ListParamClause ')' . extendsClause constructorClause IS block

    EXTENDS  décalage et aller à l'état 58

    extendsClause  aller à l'état 59


État 48

    5 ListParam: Param ',' . ListParam

    VAR  décalage et aller à l'état 28

    $défaut  réduction par utilisation de la règle 9 (Var)

    ListParam  aller à l'état 60
    Param      aller à l'état 31
    Var        aller à l'état 32


État 49

    7 Param: Var ID . ':' CLASSID Init

    ':'  décalage et aller à l'état 61


État 50

   20 declObject: OBJECT ID IS . block

    '{'  décalage et aller à l'état 9

    block  aller à l'état 62


État 51

   43 ITE: IF Expr THEN . Inst else

    OBJECT    décalage et aller à l'état 12
    OVERRIDE  décalage et aller à l'état 13
    IF        décalage et aller à l'état 14
    RETURN    décalage et aller à l'état 15
    '{'       décalage et aller à l'état 9
    ID        décalage et aller à l'état 16
    CSTE      décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 24 (Override)

    declObject  aller à l'état 18
    declMethod  aller à l'état 19
    Override    aller à l'état 20
    block       aller à l'état 21
    Inst        aller à l'état 63
    ITE         aller à l'état 25
    cible       aller à l'état 26
    Expr        aller à l'état 27


État 52

   46 cible: ID AFF Expr .
   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr

    ADD  décalage et aller à l'état 43
    SUB  décalage et aller à l'état 44
    MUL  décalage et aller à l'état 45
    DIV  décalage et aller à l'état 46

    $défaut  réduction par utilisation de la règle 46 (cible)


État 53

   21 declMethod: Override DEF ID . '(' ListParamClause ')' ':' ID ADD Expr
   22           | Override DEF ID . '(' ListParamClause ')' ClassClause IS block

    '('  décalage et aller à l'état 64


État 54

   47 Expr: Expr . ADD Expr
   47     | Expr ADD Expr .
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr

    MUL  décalage et aller à l'état 45
    DIV  décalage et aller à l'état 46

    $défaut  réduction par utilisation de la règle 47 (Expr)


État 55

   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   48     | Expr SUB Expr .
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr

    MUL  décalage et aller à l'état 45
    DIV  décalage et aller à l'état 46

    $défaut  réduction par utilisation de la règle 48 (Expr)


État 56

   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   49     | Expr MUL Expr .
   50     | Expr . DIV Expr

    $défaut  réduction par utilisation de la règle 49 (Expr)


État 57

   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr
   50     | Expr DIV Expr .

    $défaut  réduction par utilisation de la règle 50 (Expr)


État 58

   12 extendsClause: EXTENDS . CLASSID '(' ListArgClause ')'

    CLASSID  décalage et aller à l'état 65


État 59

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause . constructorClause IS block

    '{'  décalage et aller à l'état 9

    $défaut  réduction par utilisation de la règle 19 (constructorClause)

    constructorClause  aller à l'état 66
    block              aller à l'état 67


État 60

    5 ListParam: Param ',' ListParam .

    $défaut  réduction par utilisation de la règle 5 (ListParam)


État 61

    7 Param: Var ID ':' . CLASSID Init

    CLASSID  décalage et aller à l'état 68


État 62

   20 declObject: OBJECT ID IS block .

    $défaut  réduction par utilisation de la règle 20 (declObject)


État 63

   43 ITE: IF Expr THEN Inst . else

    ELSE  décalage et aller à l'état 69

    ELSE      [réduction par utilisation de la règle 45 (else)]
    $défaut  réduction par utilisation de la règle 45 (else)

    else  aller à l'état 70


État 64

   21 declMethod: Override DEF ID '(' . ListParamClause ')' ':' ID ADD Expr
   22           | Override DEF ID '(' . ListParamClause ')' ClassClause IS block

    VAR  décalage et aller à l'état 28

    ID        réduction par utilisation de la règle 9 (Var)
    $défaut  réduction par utilisation de la règle 4 (ListParamClause)

    ListParamClause  aller à l'état 71
    ListParam        aller à l'état 30
    Param            aller à l'état 31
    Var              aller à l'état 32


État 65

   12 extendsClause: EXTENDS CLASSID . '(' ListArgClause ')'

    '('  décalage et aller à l'état 72


État 66

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause . IS block

    IS  décalage et aller à l'état 73


État 67

   18 constructorClause: block .

    $défaut  réduction par utilisation de la règle 18 (constructorClause)


État 68

    7 Param: Var ID ':' CLASSID . Init

    AFF  décalage et aller à l'état 74

    $défaut  réduction par utilisation de la règle 11 (Init)

    Init  aller à l'état 75


État 69

   44 else: ELSE . Inst

    OBJECT    décalage et aller à l'état 12
    OVERRIDE  décalage et aller à l'état 13
    IF        décalage et aller à l'état 14
    RETURN    décalage et aller à l'état 15
    '{'       décalage et aller à l'état 9
    ID        décalage et aller à l'état 16
    CSTE      décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 24 (Override)

    declObject  aller à l'état 18
    declMethod  aller à l'état 19
    Override    aller à l'état 20
    block       aller à l'état 21
    Inst        aller à l'état 76
    ITE         aller à l'état 25
    cible       aller à l'état 26
    Expr        aller à l'état 27


État 70

   43 ITE: IF Expr THEN Inst else .

    $défaut  réduction par utilisation de la règle 43 (ITE)


État 71

   21 declMethod: Override DEF ID '(' ListParamClause . ')' ':' ID ADD Expr
   22           | Override DEF ID '(' ListParamClause . ')' ClassClause IS block

    ')'  décalage et aller à l'état 77


État 72

   12 extendsClause: EXTENDS CLASSID '(' . ListArgClause ')'

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 14 (ListArgClause)

    ListArgClause  aller à l'état 78
    ListArg        aller à l'état 79
    Arg            aller à l'état 80
    Expr           aller à l'état 81


État 73

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS . block

    '{'  décalage et aller à l'état 9

    block  aller à l'état 82


État 74

   10 Init: AFF . Expr

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    Expr  aller à l'état 83


État 75

    7 Param: Var ID ':' CLASSID Init .

    $défaut  réduction par utilisation de la règle 7 (Param)


État 76

   44 else: ELSE Inst .

    $défaut  réduction par utilisation de la règle 44 (else)


État 77

   21 declMethod: Override DEF ID '(' ListParamClause ')' . ':' ID ADD Expr
   22           | Override DEF ID '(' ListParamClause ')' . ClassClause IS block

    ':'  décalage et aller à l'état 84

    $défaut  réduction par utilisation de la règle 26 (ClassClause)

    ClassClause  aller à l'état 85


État 78

   12 extendsClause: EXTENDS CLASSID '(' ListArgClause . ')'

    ')'  décalage et aller à l'état 86


État 79

   13 ListArgClause: ListArg .

    $défaut  réduction par utilisation de la règle 13 (ListArgClause)


État 80

   15 ListArg: Arg . ',' ListArg
   16        | Arg .

    ','  décalage et aller à l'état 87

    $défaut  réduction par utilisation de la règle 16 (ListArg)


État 81

   17 Arg: Expr .
   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr

    ADD  décalage et aller à l'état 43
    SUB  décalage et aller à l'état 44
    MUL  décalage et aller à l'état 45
    DIV  décalage et aller à l'état 46

    $défaut  réduction par utilisation de la règle 17 (Arg)


État 82

    2 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block .

    $défaut  réduction par utilisation de la règle 2 (declClass)


État 83

   10 Init: AFF Expr .
   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr

    ADD  décalage et aller à l'état 43
    SUB  décalage et aller à l'état 44
    MUL  décalage et aller à l'état 45
    DIV  décalage et aller à l'état 46

    $défaut  réduction par utilisation de la règle 10 (Init)


État 84

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' . ID ADD Expr
   25 ClassClause: ':' . CLASSID

    ID       décalage et aller à l'état 88
    CLASSID  décalage et aller à l'état 89


État 85

   22 declMethod: Override DEF ID '(' ListParamClause ')' ClassClause . IS block

    IS  décalage et aller à l'état 90


État 86

   12 extendsClause: EXTENDS CLASSID '(' ListArgClause ')' .

    $défaut  réduction par utilisation de la règle 12 (extendsClause)


État 87

   15 ListArg: Arg ',' . ListArg

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    ListArg  aller à l'état 91
    Arg      aller à l'état 80
    Expr     aller à l'état 81


État 88

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID . ADD Expr

    ADD  décalage et aller à l'état 92


État 89

   25 ClassClause: ':' CLASSID .

    $défaut  réduction par utilisation de la règle 25 (ClassClause)


État 90

   22 declMethod: Override DEF ID '(' ListParamClause ')' ClassClause IS . block

    '{'  décalage et aller à l'état 9

    block  aller à l'état 93


État 91

   15 ListArg: Arg ',' ListArg .

    $défaut  réduction par utilisation de la règle 15 (ListArg)


État 92

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID ADD . Expr

    ID    décalage et aller à l'état 34
    CSTE  décalage et aller à l'état 17

    Expr  aller à l'état 94


État 93

   22 declMethod: Override DEF ID '(' ListParamClause ')' ClassClause IS block .

    $défaut  réduction par utilisation de la règle 22 (declMethod)


État 94

   21 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID ADD Expr .
   47 Expr: Expr . ADD Expr
   48     | Expr . SUB Expr
   49     | Expr . MUL Expr
   50     | Expr . DIV Expr

    ADD  décalage et aller à l'état 43
    SUB  décalage et aller à l'état 44
    MUL  décalage et aller à l'état 45
    DIV  décalage et aller à l'état 46

    $défaut  réduction par utilisation de la règle 21 (declMethod)
