Non-terminaux inutiles dans la grammaire

   ListArg
   Arg
   declObject
   declMethod
   Override
   ClassClause
   Prog
   classLOpt
   ListDeclClass
   ITE
   else
   cible
   Expr


Terminaux inutilisés dans la grammaire

   OBJECT
   DEF
   OVERRIDE
   IF
   THEN
   ELSE
   AFF
   '.'
   ADD
   SUB
   MUL
   DIV
   CSTE
   RELOP


Règles inutiles dans la grammaire

   21 Init: AFF Expr

   22 ListArgClause: ListArg

   23 ListArg: Arg ',' ListArg
   24        | Arg

   25 Arg: Expr

   26 declObject: OBJECT ID IS block

   27 declMethod: Override DEF ID '(' ListParamClause ')' ':' ID ADD Expr
   28           | Override DEF ID '(' ListParamClause ')' ClassClause IS block

   29 Override: OVERRIDE
   30         | %empty

   31 ClassClause: ':' CLASSID
   32            | %empty

   33 Prog: classLOpt block

   34 classLOpt: ListDeclClass
   35          | %empty

   36 ListDeclClass: declClass ListDeclClass
   37              | declClass

   38 Inst: ITE
   39     | cible ';'
   40     | Expr ';'

   41 ITE: IF Expr THEN Inst else

   42 else: ELSE Inst
   43     | %empty

   44 cible: ID AFF Expr

   45 Expr: Expr ADD Expr
   46     | Expr SUB Expr
   47     | Expr MUL Expr
   48     | Expr DIV Expr


Grammaire

    0 $accept: declClass $end

    1 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block

    2 ListParamClause: ListParam
    3                | %empty

    4 ListParam: Param ',' ListParam
    5          | Param

    6 Param: Var ID ':' CLASSID Init

    7 Var: VAR
    8    | %empty

    9 Init: %empty

   10 extendsClause: EXTENDS CLASSID '(' ListArgClause ')'

   11 ListArgClause: %empty

   12 constructorClause: block
   13                  | %empty

   14 block: '{' ListInstClause '}'

   15 ListInstClause: ListInst
   16               | %empty

   17 ListInst: Inst ListInst
   18         | Inst

   19 Inst: block
   20     | RETURN ';'


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'(' (40) 1 10
')' (41) 1 10
',' (44) 4
'.' (46)
':' (58) 6
';' (59) 20
'{' (123) 14
'}' (125) 14
error (256)
IS (258) 1
OBJECT (259)
CLASS (260) 1
VAR (261) 7
EXTENDS (262) 10
DEF (263)
OVERRIDE (264)
IF (265)
THEN (266)
ELSE (267)
AFF (268)
RETURN (269) 20
ADD (270)
SUB (271)
MUL (272)
DIV (273)
ID (274) 6
CLASSID (275) 1 6 10
CSTE (276)
RELOP (277)


Non-terminaux, suivis des règles où ils apparaissent

$accept (31)
    à gauche: 0
declClass (32)
    à gauche: 1, à droite: 0
ListParamClause (33)
    à gauche: 2 3, à droite: 1
ListParam (34)
    à gauche: 4 5, à droite: 2 4
Param (35)
    à gauche: 6, à droite: 4 5
Var (36)
    à gauche: 7 8, à droite: 6
Init (37)
    à gauche: 9, à droite: 6
extendsClause (38)
    à gauche: 10, à droite: 1
ListArgClause (39)
    à gauche: 11, à droite: 10
constructorClause (40)
    à gauche: 12 13, à droite: 1
block (41)
    à gauche: 14, à droite: 1 12 19
ListInstClause (42)
    à gauche: 15 16, à droite: 14
ListInst (43)
    à gauche: 17 18, à droite: 15 17
Inst (44)
    à gauche: 19 20, à droite: 17 18


État 0

    0 $accept: . declClass $end

    CLASS  décalage et aller à l'état 1

    declClass  aller à l'état 2


État 1

    1 declClass: CLASS . CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block

    CLASSID  décalage et aller à l'état 3


État 2

    0 $accept: declClass . $end

    $end  décalage et aller à l'état 4


État 3

    1 declClass: CLASS CLASSID . '(' ListParamClause ')' extendsClause constructorClause IS block

    '('  décalage et aller à l'état 5


État 4

    0 $accept: declClass $end .

    $défaut  accepter


État 5

    1 declClass: CLASS CLASSID '(' . ListParamClause ')' extendsClause constructorClause IS block

    VAR  décalage et aller à l'état 6

    ID        réduction par utilisation de la règle 8 (Var)
    $défaut  réduction par utilisation de la règle 3 (ListParamClause)

    ListParamClause  aller à l'état 7
    ListParam        aller à l'état 8
    Param            aller à l'état 9
    Var              aller à l'état 10


État 6

    7 Var: VAR .

    $défaut  réduction par utilisation de la règle 7 (Var)


État 7

    1 declClass: CLASS CLASSID '(' ListParamClause . ')' extendsClause constructorClause IS block

    ')'  décalage et aller à l'état 11


État 8

    2 ListParamClause: ListParam .

    $défaut  réduction par utilisation de la règle 2 (ListParamClause)


État 9

    4 ListParam: Param . ',' ListParam
    5          | Param .

    ','  décalage et aller à l'état 12

    $défaut  réduction par utilisation de la règle 5 (ListParam)


État 10

    6 Param: Var . ID ':' CLASSID Init

    ID  décalage et aller à l'état 13


État 11

    1 declClass: CLASS CLASSID '(' ListParamClause ')' . extendsClause constructorClause IS block

    EXTENDS  décalage et aller à l'état 14

    extendsClause  aller à l'état 15


État 12

    4 ListParam: Param ',' . ListParam

    VAR  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 8 (Var)

    ListParam  aller à l'état 16
    Param      aller à l'état 9
    Var        aller à l'état 10


État 13

    6 Param: Var ID . ':' CLASSID Init

    ':'  décalage et aller à l'état 17


État 14

   10 extendsClause: EXTENDS . CLASSID '(' ListArgClause ')'

    CLASSID  décalage et aller à l'état 18


État 15

    1 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause . constructorClause IS block

    '{'  décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 13 (constructorClause)

    constructorClause  aller à l'état 20
    block              aller à l'état 21


État 16

    4 ListParam: Param ',' ListParam .

    $défaut  réduction par utilisation de la règle 4 (ListParam)


État 17

    6 Param: Var ID ':' . CLASSID Init

    CLASSID  décalage et aller à l'état 22


État 18

   10 extendsClause: EXTENDS CLASSID . '(' ListArgClause ')'

    '('  décalage et aller à l'état 23


État 19

   14 block: '{' . ListInstClause '}'

    RETURN  décalage et aller à l'état 24
    '{'     décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 16 (ListInstClause)

    block           aller à l'état 25
    ListInstClause  aller à l'état 26
    ListInst        aller à l'état 27
    Inst            aller à l'état 28


État 20

    1 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause . IS block

    IS  décalage et aller à l'état 29


État 21

   12 constructorClause: block .

    $défaut  réduction par utilisation de la règle 12 (constructorClause)


État 22

    6 Param: Var ID ':' CLASSID . Init

    $défaut  réduction par utilisation de la règle 9 (Init)

    Init  aller à l'état 30


État 23

   10 extendsClause: EXTENDS CLASSID '(' . ListArgClause ')'

    $défaut  réduction par utilisation de la règle 11 (ListArgClause)

    ListArgClause  aller à l'état 31


État 24

   20 Inst: RETURN . ';'

    ';'  décalage et aller à l'état 32


État 25

   19 Inst: block .

    $défaut  réduction par utilisation de la règle 19 (Inst)


État 26

   14 block: '{' ListInstClause . '}'

    '}'  décalage et aller à l'état 33


État 27

   15 ListInstClause: ListInst .

    $défaut  réduction par utilisation de la règle 15 (ListInstClause)


État 28

   17 ListInst: Inst . ListInst
   18         | Inst .

    RETURN  décalage et aller à l'état 24
    '{'     décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 18 (ListInst)

    block     aller à l'état 25
    ListInst  aller à l'état 34
    Inst      aller à l'état 28


État 29

    1 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS . block

    '{'  décalage et aller à l'état 19

    block  aller à l'état 35


État 30

    6 Param: Var ID ':' CLASSID Init .

    $défaut  réduction par utilisation de la règle 6 (Param)


État 31

   10 extendsClause: EXTENDS CLASSID '(' ListArgClause . ')'

    ')'  décalage et aller à l'état 36


État 32

   20 Inst: RETURN ';' .

    $défaut  réduction par utilisation de la règle 20 (Inst)


État 33

   14 block: '{' ListInstClause '}' .

    $défaut  réduction par utilisation de la règle 14 (block)


État 34

   17 ListInst: Inst ListInst .

    $défaut  réduction par utilisation de la règle 17 (ListInst)


État 35

    1 declClass: CLASS CLASSID '(' ListParamClause ')' extendsClause constructorClause IS block .

    $défaut  réduction par utilisation de la règle 1 (declClass)


État 36

   10 extendsClause: EXTENDS CLASSID '(' ListArgClause ')' .

    $défaut  réduction par utilisation de la règle 10 (extendsClause)
