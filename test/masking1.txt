class A() is {
  var v: Integer := 1;
  def f() : Integer := v
}
class A2() extends A() is {
  var v: String := "coucou";
  def g() : String := v
}
class A3() extends A2() is {
  var v: Integer := 5;
  def h() : Integer := v
  override def f() : Integer := v
  def k() is {
    ((A this).v).toString().println();
    ((A2 this).v).println();
    this.v.toString().println();
  }
}
class A4() extends A3() is {
  def z() : Integer := v
}{
  var monA3 : A3 := new A3();
  var monA4 : A4 := new A4();
  var monA : A := new A();
  is
  monA3.f().toString().println();
  /* le cast est une notion statique, doit donner le meme resultat
   * le cast recherche une fonction f() depuis A2 et tombe sur la signature
   * de f() dans A.
   */
  (A monA3).f().toString().println();
  monA3.g().println();
  monA3.h().toString().println();
  monA3.k();
  monA4.z().toString().println();
}
